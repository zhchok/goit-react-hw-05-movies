{"version":3,"file":"static/js/141.5a433bdd.chunk.js","mappings":"oVAEAA,IAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAU,mCAEVC,EAAc,mCAAG,oGACNF,IAAAA,IAAU,6DADJ,cACvBG,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAKdC,EAAe,mCAAG,WAAMC,GAAN,uFACPP,IAAAA,IAAA,gBAAmBO,EAAnB,6DADO,cACxBJ,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKfI,EAAe,mCAAG,WAAMD,GAAN,uFACPP,IAAAA,IAAA,gBAAmBO,EAAnB,qEADO,cACxBJ,EADwB,yBAEvBA,EAASC,KAAKK,MAFS,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,uFACPP,IAAAA,IAAA,gBACbO,EADa,4EADO,cACxBJ,EADwB,yBAKvBA,EAASC,MALc,2CAAH,sDAQfO,EAAS,mCAAG,WAAMC,GAAN,uFACDZ,IAAAA,IAAA,uEAC0CY,EAD1C,+CADC,cAClBT,EADkB,yBAKjBA,EAASC,KAAKC,SALG,2CAAH,uD,sICzBTQ,EAAeC,EAAAA,GAAAA,OAAH,4bAmBZC,GAAcD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qRAgBXG,EAAaH,EAAAA,GAAAA,KAAH,8K,SClCVI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAK3B,OACC,+BACC,SAAC,KAAD,CAAQC,cAAe,CAAER,MAAO,IAAMO,SANnB,SAACE,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC/BH,EAASE,GACTC,KAIC,UACC,UAACL,EAAD,YACC,SAACF,EAAD,CAAaQ,KAAK,SAASC,KAAK,QAAQC,aAAa,MAAMC,WAAS,EAACC,YAAY,mBACjF,SAACd,EAAD,CAAcU,KAAK,mB,6BC2CxB,EAjDe,WAAO,IAAD,EACpB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMrB,EAAK,UAAGoB,EAAaE,IAAI,gBAApB,aAAG,EAA2BC,OACnCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJ1B,IAELD,EAAAA,EAAAA,IAAUC,GAAO2B,MAAK,SAAAC,GAAK,OAAIV,EAAUU,QACvC,CAAC5B,EAAOoB,IAEX,IASMS,EAAgBZ,EAAOa,QAAO,SAAAF,GAAK,OAAIA,EAAMG,MAAMC,cAAcC,SAA1B,OAAmCjC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAOgC,kBAEvF,OACC,UAAC,IAAD,CAAKE,GAAG,OAAR,WACC,SAAC5B,EAAD,CAAWC,SAbQ,SAAA4B,GACpBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cACnBC,EAAQJ,EAAMK,OAAOC,SAASzC,MAAMuC,MAAMP,cAEhDX,EAAgB,CAAErB,MAAOuC,IACzBF,EAAWK,YAQV,wBACEb,GACAA,EAAcc,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,MAAP,OACjB,yBACC,SAAC,KAAD,CAAMc,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMvB,GAAlC,SACEO,KAFMa","sources":["api.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nexport const IMG_URL = \"https://image.tmdb.org/t/p/w200/\";\n\nexport const getTrendMovies = async () => {\n\tconst response = await axios.get(\"trending/all/day?api_key=97f9d78f20e5fcb9506a240d7e33de31\");\n\treturn response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n\tconst response = await axios.get(`movie/${movieId}?api_key=97f9d78f20e5fcb9506a240d7e33de31&language=en-US`);\n\treturn response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n\tconst response = await axios.get(`movie/${movieId}/credits?api_key=97f9d78f20e5fcb9506a240d7e33de31&language=en-US`);\n\treturn response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n\tconst response = await axios.get(\n\t\t`movie/${movieId}/reviews?api_key=97f9d78f20e5fcb9506a240d7e33de31&language=en-US&page=1`,\n\t);\n\n\treturn response.data;\n};\n\nexport const getMovies = async query => {\n\tconst response = await axios.get(\n\t\t`/search/movie?api_key=97f9d78f20e5fcb9506a240d7e33de31&query=${query}&language=en-US&page=1&include_adult=false`,\n\t);\n\n\treturn response.data.results;\n};\n","import styled from \"styled-components\";\nimport { Field } from \"formik\";\n\nexport const SearchButton = styled.button`\n\tdisplay: inline-block;\n\tbackground-color: transparent;\n\twidth: 48px;\n\theight: 48px;\n\tborder: 0;\n\tbackground-image: url(\"https://www.svgrepo.com/show/22184/search.svg\");\n\tbackground-size: 40%;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\topacity: 0.6;\n\ttransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\tcursor: pointer;\n\toutline: none;\n\t:hover {\n\t\topacity: 1;\n\t}\n`;\n\nexport const SearchInput = styled(Field)`\n\tdisplay: inline-block;\n\twidth: 50%;\n\tfont: inherit;\n\tfont-size: 20px;\n\tborder: none;\n\toutline: none;\n\tpadding-left: 4px;\n\tpadding-right: 4px;\n\tborder: 1px solid black;\n\t::placeholder {\n\t\tfont: inherit;\n\t\tfont-size: 18px;\n\t}\n`;\n\nexport const SearchForm = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tmax-width: 600px;\n\tbackground-color: #fff;\n\tborder-radius: 3px;\n\toverflow: hidden;\n`;\n","import { Formik } from \"formik\";\nimport { SearchButton, SearchInput, SearchForm } from \"./SearchBox.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const SearchBox = ({ onSubmit }) => {\n\tconst handleSubmit = (values, { resetForm }) => {\n\t\tonSubmit(values);\n\t\tresetForm();\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Formik initialValues={{ query: \"\" }} onSubmit={handleSubmit}>\n\t\t\t\t<SearchForm>\n\t\t\t\t\t<SearchInput type=\"search\" name=\"query\" autoComplete=\"off\" autoFocus placeholder=\"Search movies\" />\n\t\t\t\t\t<SearchButton type=\"submit\"></SearchButton>\n\t\t\t\t</SearchForm>\n\t\t\t</Formik>\n\t\t</>\n\t);\n};\n\nSearchBox.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n};\n","import { getMovies } from \"api\";\nimport { Box } from \"components/box1/box\";\nimport { SearchBox } from \"components/SearchBox/SearchBox\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Movies = () => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst query = searchParams.get(\"query\")?.trim();\n\tconst location = useLocation();\n\n\tuseEffect(() => {\n\t\tif (!query) return;\n\n\t\tgetMovies(query).then(movie => setMovies(movie));\n\t}, [query, searchParams]);\n\n\tconst handleSubmit = event => {\n\t\tevent.preventDefault();\n\t\tconst valueInput = event.currentTarget;\n\t\tconst value = event.target.elements.query.value.toLowerCase();\n\n\t\tsetSearchParams({ query: value });\n\t\tvalueInput.reset();\n\t};\n\n\tconst visibleMovies = movies.filter(movie => movie.title.toLowerCase().includes(query?.toLowerCase()));\n\n\treturn (\n\t\t<Box as=\"main\">\n\t\t\t<SearchBox onSubmit={handleSubmit}></SearchBox>\n\t\t\t<ul>\n\t\t\t\t{visibleMovies &&\n\t\t\t\t\tvisibleMovies.map(({ id, title }) => (\n\t\t\t\t\t\t<li key={id}>\n\t\t\t\t\t\t\t<Link to={`${id}`} state={{ from: location }}>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Box>\n\t);\n};\n\nMovies.propTypes = {\n\tmovie: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.number.isRequired,\n\t\t\ttitle: PropTypes.string.isRequired,\n\t\t}),\n\t),\n};\n\nexport default Movies;\n"],"names":["axios","IMG_URL","getTrendMovies","response","data","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","getMovies","query","SearchButton","styled","SearchInput","Field","SearchForm","SearchBox","onSubmit","initialValues","values","resetForm","type","name","autoComplete","autoFocus","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","trim","location","useLocation","useEffect","then","movie","visibleMovies","filter","title","toLowerCase","includes","as","event","preventDefault","valueInput","currentTarget","value","target","elements","reset","map","id","to","state","from"],"sourceRoot":""}